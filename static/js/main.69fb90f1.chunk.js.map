{"version":3,"sources":["utils/remote-data/types.ts","theme.ts","utils/remote-data/constants.ts","utils/remote-data/methods.ts","utils/remote-data/LoaderWrapper.tsx","state/actions/requstUser.actions.ts","api/api.ts","state/actions/auth.actions.ts","state/redusers/user.reducer.ts","state/redusers/auth.reducer.ts","state/redusers/index.ts","module/sign-in/components/sign-in.component.tsx","module/sign-in/containers/sign-in.container.ts","module/sign-up/components/sign-up.component.tsx","module/sign-up/containers/sign-up.container.ts","module/home/components/nav-bar.component.tsx","module/home/components/home.component.tsx","module/app/components/app.component.tsx","module/app/containers/app.container.ts","index.tsx"],"names":["RemoteDataType","theme","createMuiTheme","palette","primary","main","secondary","error","red","A400","background","default","initial","type","Initial","pending","Pending","success","value","Success","failure","Failure","foldRemoteData","data","renderInitial","renderPending","renderSuccess","renderFailure","mapRemoteData","parseToB","LoaderWrapper","props","predicateNoData","renderNoData","children","UserActionType","saveTokenToLS","token","localStorage","setItem","getCommonHeaders","headers","Headers","append","getAuthHeaders","commonHeaders","getItem","api","signUp","a","body","JSON","stringify","requestOptions","method","fetch","res","status","json","resData","name","user","signIn","getUser","AuthType","setUserSuccess","SET_USERNAME_SUCCESS","payload","initialState","singUpSuccess","SIGN_UP_SUCCESS","signUpFailure","SIGN_UP_FAILURE","singInSuccess","SIGN_IN_SUCCESS","signInFailure","SIGN_IN_FAILURE","reducer","combineReducers","state","action","SET_USERNAME_PENDING","SET_USERNAME_FAILURE","auth","SIGN_UP_PENDING","SIGN_IN_PENDING","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","form","width","submit","SignInContainer","connect","formState","dispatch","onSubmit","getState","Error","login","classes","React","useState","email","setEmail","password","setPassword","Container","component","maxWidth","CssBaseline","className","Avatar","noValidate","e","preventDefault","TextField","required","fullWidth","id","label","autoComplete","autoFocus","onChange","target","FormControlLabel","control","Checkbox","Button","disabled","Grid","container","item","xs","to","Box","mt","SignUpContainer","createAccount","firstName","setFirstName","lastName","setLastName","console","log","sm","justify","createStyles","root","flexGrow","menuButton","marginRight","title","register","textDecoration","NavBar","userName","AppBar","position","Toolbar","IconButton","edge","aria-label","Home","App","basename","path","exact","render","this","requestUser","css","PureComponent","AppContainer","undefined","store","createStore","applyMiddleware","logger","thunk","ReactDOM","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.69fb90f1.chunk.js","sourcesContent":["export enum RemoteDataType {\n    Initial = 'initial',\n    Pending = 'pending',\n    Success = 'success',\n    Failure = 'failure',\n  }\n  \n  export interface Initial {\n    type: RemoteDataType.Initial;\n  }\n  \n  export interface Pending {\n    type: RemoteDataType.Pending;\n  }\n  \n  export interface Success<T> {\n    type: RemoteDataType.Success;\n    value: T;\n  }\n  \n  export interface Failure<E> {\n    type: RemoteDataType.Failure;\n    value: E;\n  }\n  \n  export type RemoteData<T, E = Error> = Initial | Pending | Success<T> | Failure<E>;\n  ","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nexport const theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#556cd6',\n        },\n        secondary: {\n            main: '#19857b',\n        },\n        error: {\n            main: red.A400,\n        },\n        background: {\n            default: '#fff',\n        },\n    },\n});\n","import { Initial, Pending, Success, Failure, RemoteDataType } from './types';\n\nexport const initial: Initial = {\n  type: RemoteDataType.Initial,\n}\n\nexport const pending: Pending = {\n  type: RemoteDataType.Pending,\n}\n\nexport const success = <T>(value: T): Success<T> => ({\n  type: RemoteDataType.Success,\n  value,\n})\n\nexport const failure = <E>(value: E): Failure<E> => ({\n  type: RemoteDataType.Failure,\n  value,\n})\n","import { RemoteData, RemoteDataType, Initial, Pending, Success, Failure } from './types';\nimport { initial, pending, success, failure } from './constants';\n\nexport const isInitial = <T>(data: RemoteData<T>): data is Initial => data.type === RemoteDataType.Initial;\nexport const isPending = <T>(data: RemoteData<T>): data is Pending => data.type === RemoteDataType.Pending;\nexport const isSuccess = <T>(data: RemoteData<T>): data is Success<T> => data.type === RemoteDataType.Success;\nexport const isFailure = <T, E>(data: RemoteData<T, E>): data is Failure<E> => data.type === RemoteDataType.Failure;\n\nfunction combineRD2<T1, T2>(data1: RemoteData<T1>, data2: RemoteData<T2[]>): RemoteData<[T1, ...T2[]]> {\n  if (isFailure(data1)) {\n    return failure(data1.value);\n  } else if (isFailure(data2)) {\n    return failure(data2.value);\n  } else if (isInitial(data1) || isInitial(data2)) {\n    return initial;\n  } else if (isPending(data1) || isPending(data2)) {\n    return pending;\n  } else if (isSuccess(data1) && isSuccess(data2)) {\n    return success([data1.value, ...data2.value]);\n  }\n  return initial;\n}\nexport function combineRemoteData<T1, T2>(data1: RemoteData<T1>, data2: RemoteData<T2>): RemoteData<[T1, T2]>;\nexport function combineRemoteData<T1, T2, T3>(\n  data1: RemoteData<T1>,\n  data2: RemoteData<T2>,\n  data3: RemoteData<T3>,\n): RemoteData<[T1, T2, T3]>;\nexport function combineRemoteData<T>(...data: RemoteData<T>[]): RemoteData<T[]> {\n  return data.reduceRight(\n    (acc: RemoteData<T[]>, curr: RemoteData<T>) => combineRD2(curr, acc) as RemoteData<T[]>,\n    success([]),\n  );\n}\n\nexport function foldRemoteData<T, E, R>(\n  data: RemoteData<T, E>,\n  renderInitial: () => R,\n  renderPending: () => R,\n  renderSuccess: (data: T) => R,\n  renderFailure: (error: E) => R,\n): R {\n  switch (data.type) {\n    case RemoteDataType.Initial: {\n      return renderInitial();\n    }\n    case RemoteDataType.Pending: {\n      return renderPending();\n    }\n    case RemoteDataType.Success: {\n      return renderSuccess(data.value);\n    }\n    case RemoteDataType.Failure: {\n      return renderFailure(data.value);\n    }\n  }\n}\n\nexport function mapRemoteData<A, B, E>(\n  data: RemoteData<A, E>,\n  parseToB: (a: A) => B,\n): RemoteData<B, E> {\n  return foldRemoteData<A, E, RemoteData<B, E>>(\n    data,\n    () => initial,\n    () => pending,\n    value => success(parseToB(value)),\n    error => failure(error),\n  );\n}\n","import * as React from 'react';\nimport { RemoteData } from './types';\nimport { foldRemoteData } from './methods';\n\ninterface Props<T> {\n  children: (data: T) => React.ReactElement;\n  data: RemoteData<T>;\n  renderPending?: () => React.ReactElement;\n  renderFailure?: (error: Error) => React.ReactElement;\n  predicateNoData?: (data: T) => boolean;\n  renderNoData?: (data: T) => React.ReactElement;\n}\n\nexport function LoaderWrapper<T>(props: Props<T>): React.ReactElement {\n  const {\n    data,\n    renderPending,\n    renderFailure,\n    predicateNoData,\n    renderNoData,\n    children,\n  } = props;\n\n  return foldRemoteData<T, Error, React.ReactElement>(\n    data,\n    renderPending || (() => <div>Initial...</div>),\n    renderPending || (() => <div>Pending...</div>),\n    data => (\n      (predicateNoData && renderNoData && predicateNoData(data)) ? renderNoData(data) : children(data)\n    ),\n    renderFailure || (() => <div>Failure</div>),\n  );\n}\n","import { Action } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport { ReduxState } from '../redusers';\nimport { api, User } from '../../api/api';\n\nexport enum UserActionType {\n    SET_USERNAME_PENDING = 'SET_USERNAME_PENDING',\n    SET_USERNAME_SUCCESS = 'SET_USERNAME_SUCCESS',\n    SET_USERNAME_FAILURE = 'SET_USERNAME_FAILURE',\n}\n\ntype Pending = {\n    type: UserActionType.SET_USERNAME_PENDING;\n}\n\ntype Success = {\n    type: UserActionType.SET_USERNAME_SUCCESS;\n    payload: User | undefined;\n}\n\ntype Failure = {\n    type: UserActionType.SET_USERNAME_FAILURE;\n    payload: Error;\n}\n\nexport const setUserPending = (): Pending => ({\n    type: UserActionType.SET_USERNAME_PENDING,\n});\n\nexport const setUserSuccess = (user: User | undefined): Success => ({\n    type: UserActionType.SET_USERNAME_SUCCESS,\n    payload: user,\n});\n\nexport const setUserFailure = (error: Error): Failure => ({\n    type: UserActionType.SET_USERNAME_FAILURE,\n    payload: error,\n});\n\nexport type UserActions = \n    Pending\n    | Success\n    | Failure;\n\nexport const requestUser = (): ThunkAction<Promise<void>, ReduxState, {}, Action> => async (dispatch, getState) => {\n    dispatch(setUserPending());\n    try {\n        const user = await api.getUser();\n        if (user) {\n            dispatch(setUserSuccess(user));\n        } else {\n            dispatch(setUserSuccess(undefined));\n        }\n    } catch (e) {\n        dispatch(setUserFailure(e));\n    }\n}\n","import { RegisterData } from '../module/sign-up/components/sign-up.component';\nimport { LoginData } from '../module/sign-in/components/sign-in.component';\n\nexport type User = {\n    name: string;\n};\n\nexport const TOKEN_KEY = 'token';\n\nconst saveTokenToLS = (token: string): void => {\n    localStorage.setItem(TOKEN_KEY, token);\n};\n\nconst getCommonHeaders = () => {\n    const headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n\n    return headers;\n}\n\nconst getAuthHeaders = () => {\n    const commonHeaders = getCommonHeaders();\n    const token = localStorage.getItem(TOKEN_KEY);\n    commonHeaders.append('Authorization', `Bearer ${token}`);\n\n    return commonHeaders;\n}\n\nclass Api {\n    signUp = async (data: RegisterData): Promise<User | null> => {\n        try {\n            const headers = getCommonHeaders();\n            const body = JSON.stringify(data);\n\n            const requestOptions = {\n                method: 'POST',\n                headers,\n                body,\n            };\n\n            const res = await fetch('/users', requestOptions);\n            const status = res.status;\n\n            if (status === 201) {\n                const resData = await res.json();\n                saveTokenToLS(resData.token);\n                return {\n                    name: resData.user.name,\n                };\n            }\n            return null;\n        } catch (e) {\n            return null;\n        }\n    };\n    signIn = async (data: LoginData): Promise<User | null> => {\n        try {\n            const headers = getCommonHeaders();\n            const body = JSON.stringify(data);\n\n            const requestOptions = {\n                method: 'POST',\n                headers,\n                body,\n            };\n\n            const res = await fetch('/users/login', requestOptions);\n            const status = res.status;\n\n            if (status === 200) {\n                const resData = await res.json();\n                saveTokenToLS(resData.token);\n                return {\n                    name: resData.user.name,\n                };\n            }\n            return null;\n        } catch (e) {\n            return null;\n        }\n    };\n    getUser = async (): Promise<User | null> => {\n        try {\n            const headers = getAuthHeaders();\n\n            const requestOptions = {\n                method: 'GET',\n                headers,\n            };\n\n            const res = await fetch('/users/me', requestOptions);\n            const status = res.status;\n\n            if (status === 200) {\n                const resData = await res.json();\n                return {\n                    name: resData.name,\n                };\n            }\n            return null;\n        } catch (e) {\n            return null;\n        }\n    };\n}\n\nexport const api = new Api();\n","import { Action } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport { ReduxState } from '../redusers';\nimport { api, User } from '../../api/api';\nimport { RegisterData } from '../../module/sign-up/components/sign-up.component'\nimport { LoginData } from '../../module/sign-in/components/sign-in.component';\nimport { setUserSuccess } from './requstUser.actions';\n\nexport enum AuthType {\n    SIGN_UP_PENDING = 'SIGN_UP_PENDING',\n    SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS',\n    SIGN_UP_FAILURE = 'SIGN_UP_FAILURE',\n\n    SIGN_IN_PENDING = 'SIGN_IN_PENDING',\n    SIGN_IN_SUCCESS = 'SIGN_IN_SUCCESS',\n    SIGN_IN_FAILURE = 'SIGN_IN_FAILURE',\n}\n\ntype SignUpPending = {\n    type: AuthType.SIGN_UP_PENDING;\n}\n\ntype SignUpSuccess = {\n    type: AuthType.SIGN_UP_SUCCESS;\n    payload: User | undefined;\n}\n\ntype SignUpFailure = {\n    type: AuthType.SIGN_UP_FAILURE;\n    payload: Error;\n}\n\ntype SignInPending = {\n    type: AuthType.SIGN_IN_PENDING;\n}\n\ntype SignInSuccess = {\n    type: AuthType.SIGN_IN_SUCCESS;\n    payload: User | undefined;\n}\n\ntype SignInFailure = {\n    type: AuthType.SIGN_IN_FAILURE;\n    payload: Error;\n}\n\nexport const singUpPending = (): SignUpPending => ({\n    type: AuthType.SIGN_UP_PENDING,\n});\n\nexport const singUpSuccess = (user: User | undefined): SignUpSuccess => ({\n    type: AuthType.SIGN_UP_SUCCESS,\n    payload: user,\n});\n\nexport const signUpFailure = (error: Error): SignUpFailure => ({\n    type: AuthType.SIGN_UP_FAILURE,\n    payload: error,\n});\n\nexport const singInPending = (): SignInPending => ({\n    type: AuthType.SIGN_IN_PENDING,\n});\n\nexport const singInSuccess = (user: User | undefined): SignInSuccess => ({\n    type: AuthType.SIGN_IN_SUCCESS,\n    payload: user,\n});\n\nexport const signInFailure = (error: Error): SignInFailure => ({\n    type: AuthType.SIGN_IN_FAILURE,\n    payload: error,\n});\n\nexport type AuthActions = \n    SignUpPending\n    | SignUpSuccess\n    | SignUpFailure\n    | SignInPending\n    | SignInSuccess\n    | SignInFailure\n\nexport const createAccount = (data: RegisterData): ThunkAction<Promise<void>, ReduxState, {}, Action> => async (dispatch, getState) => {\n    dispatch(singUpPending());\n    try {\n        const user = await api.signUp(data);\n        if (user) {\n            dispatch(singUpSuccess(user));\n            dispatch(setUserSuccess(user));\n        } else {\n            dispatch(signUpFailure(new Error('Ошибка на сервере')));\n        }\n    } catch (e) {\n        dispatch(signUpFailure(e));\n    }\n}\n\nexport const login = (data: LoginData): ThunkAction<Promise<void>, ReduxState, {}, Action> => async (dispatch, getState) => {\n    dispatch(singInPending());\n    try {\n        const user = await api.signIn(data);\n        if (user) {\n            dispatch(singInSuccess(user));\n            dispatch(setUserSuccess(user));\n        } else {\n            dispatch(signInFailure(new Error('Неверный логин или пароль')));\n        }\n    } catch (e) {\n        dispatch(signInFailure(e));\n    }\n}\n","import { Reducer } from 'redux';\nimport { RemoteData, initial, pending, success, failure } from '../../utils/remote-data';\nimport { UserActions, UserActionType } from '../actions/requstUser.actions';\nimport { User } from '../../api/api';\n\nexport type UsernameReducer = RemoteData<User | undefined>;\n\nconst initialState: UsernameReducer = initial;\n\nexport const usernameReducer: Reducer<UsernameReducer, UserActions> = (state = initialState, action): UsernameReducer => {\n    switch (action.type) {\n        case UserActionType.SET_USERNAME_PENDING: {\n            return pending;\n        }\n        case UserActionType.SET_USERNAME_SUCCESS: {\n            return success(action.payload);\n        }\n        case UserActionType.SET_USERNAME_FAILURE: {\n            return failure(action.payload);\n        }\n        default: {\n            return state;\n        }\n    }\n}","import { Reducer } from 'redux';\nimport { RemoteData, initial, pending, success, failure } from '../../utils/remote-data';\nimport { AuthType, AuthActions } from '../actions/auth.actions';\nimport { User } from '../../api/api'\n\nexport type AuthReducer = {\n    signUp: RemoteData<User | undefined>;\n    signIn: RemoteData<User | undefined>;\n}\n\nconst initialState: AuthReducer = {\n    signUp: initial,\n    signIn: initial,\n}\n\nexport const authReducer: Reducer<AuthReducer, AuthActions> = (state = initialState, action): AuthReducer => {\n    switch (action.type) {\n        case AuthType.SIGN_UP_PENDING: {\n            return {\n                ...state,\n                signUp: pending,\n            }\n        }\n        case AuthType.SIGN_UP_SUCCESS: {\n            return {\n                ...state,\n                signUp: success(action.payload),\n            }\n        }\n        case AuthType.SIGN_UP_FAILURE: {\n            return {\n                ...state,\n                signUp: failure(action.payload),\n            }\n        }\n        case AuthType.SIGN_IN_PENDING: {\n            return {\n                ...state,\n                signIn: pending,\n            }\n        }\n        case AuthType.SIGN_IN_SUCCESS: {\n            return {\n                ...state,\n                signIn: success(action.payload),\n            }\n        }\n        case AuthType.SIGN_IN_FAILURE: {\n            return {\n                ...state,\n                signIn: failure(action.payload),\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n}","import { combineReducers } from 'redux';\nimport { usernameReducer, UsernameReducer } from './user.reducer';\nimport { UserActions } from '../actions/requstUser.actions'\nimport { authReducer, AuthReducer } from './auth.reducer';\nimport { AuthActions } from '../actions/auth.actions'\n\nexport type ReduxState = Readonly<{\n    user: UsernameReducer,\n    auth: AuthReducer\n}>;\n\nexport type Actions = \n    | UserActions\n    | AuthActions;\n\nexport const reducer = combineReducers<ReduxState>({\n    user: usernameReducer,\n    auth: authReducer,\n})\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { RemoteData, RemoteDataType } from '../../../utils/remote-data';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Your Website\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport type LoginData = {\n    email: string;\n    password: string;\n};\n\nexport type SignInProps = {\n    formState: RemoteData<null>;\n    onSubmit(data: LoginData): void;\n};\n\nexport const SignIn: React.FC<SignInProps> = ({ onSubmit, formState }) => {\n    const classes = useStyles();\n    const [email, setEmail] = React.useState('');\n    const [password, setPassword] = React.useState('');\n\n    const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const { value } = e.target;\n        setEmail(value);\n    };\n\n    const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const { value } = e.target;\n        setPassword(value);\n    };\n\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        const data: LoginData = {\n            email,\n            password,\n        };\n        onSubmit(data);\n    };\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                {(formState.type === RemoteDataType.Failure) && (\n                    <Typography component=\"h6\" variant=\"h6\" color='error'>\n                        Неверный логин или пароль\n                    </Typography>\n                )}\n                <form\n                    className={classes.form}\n                    noValidate\n                    onSubmit={handleSubmit}\n                >\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                        onChange={handleEmailChange}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        onChange={handlePasswordChange}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\n                        label=\"Remember me\"\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        disabled={formState.type === RemoteDataType.Pending}\n                    >\n                        Sign In\n                    </Button>\n                    <Grid container>\n                        <Grid item xs>\n                            <Link href=\"#\" variant=\"body2\">\n                                Forgot password?\n                            </Link>\n                        </Grid>\n                        <Grid item>\n                            <RouterLink to=\"/sign-up\">\n                                {\"Don't have an account? Sign Up\"}\n                            </RouterLink>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            <Box mt={8}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n};\n","import { Action } from 'redux';\nimport { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { SignIn, SignInProps } from '../components/sign-in.component';\nimport { LoginData } from '../../sign-in/components/sign-in.component';\nimport { ReduxState } from '../../../state/redusers';\nimport { login } from '../../../state/actions/auth.actions';\nimport { mapRemoteData } from '../../../utils/remote-data'\n\ntype StatePropsKeys = (\n    | 'formState'\n);\ntype StateProps = Pick<SignInProps, StatePropsKeys>;\n\nconst mapStateToProps = (state: ReduxState): StateProps => ({\n    formState: mapRemoteData(state.auth.signIn, user => null),\n});\n\ntype DispatchPropsKeys = (\n    | 'onSubmit'\n);\ntype DispatchProps = Pick<SignInProps, DispatchPropsKeys>;\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<ReduxState, {}, Action>): DispatchProps => ({\n    onSubmit(data: LoginData) {\n        dispatch(login(data));\n    },\n})\n\nexport const SignInContainer = connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link } from '@material-ui/core';\nimport { RemoteData, RemoteDataType } from '../../../utils/remote-data';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Your Website\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport type SignUpProps = {\n    onSubmit(data: RegisterData): void;\n    formState: RemoteData<null>;\n};\n\nexport type RegisterData = {\n    name: string;\n    email: string;\n    password: string;\n};\n\nexport const SignUp: React.FC<SignUpProps> = ({ onSubmit, formState }) => {\n    const [firstName, setFirstName] = React.useState('');\n    const [lastName, setLastName] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [password, setPassword] = React.useState('');\n\n    const handleFirstNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const { value } = e.target;\n        setFirstName(value);\n    };\n\n    const handleLastNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const { value } = e.target;\n        setLastName(value);\n    };\n\n    const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const { value } = e.target;\n        setEmail(value);\n    };\n\n    const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const { value } = e.target;\n        setPassword(value);\n    };\n\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        const data: RegisterData = {\n            name: `${firstName} ${lastName}`,\n            email,\n            password,\n        };\n        onSubmit(data);\n    };\n\n    const classes = useStyles();\n\n    console.log('SignUp', formState);\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign up\n                </Typography>\n                {(formState.type === RemoteDataType.Failure) && (\n                    <Typography component=\"h6\" variant=\"h6\" color='error'>\n                        Неправильно введены данные\n                    </Typography>\n                )}\n                <form\n                    className={classes.form}\n                    noValidate\n                    onSubmit={handleSubmit}\n                >\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                autoComplete=\"fname\"\n                                name=\"firstName\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"firstName\"\n                                label=\"First Name\"\n                                autoFocus\n                                onChange={handleFirstNameChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"lastName\"\n                                label=\"Last Name\"\n                                name=\"lastName\"\n                                autoComplete=\"lname\"\n                                onChange={handleLastNameChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                onChange={handleEmailChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                onChange={handlePasswordChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        value=\"allowExtraEmails\"\n                                        color=\"primary\"\n                                    />\n                                }\n                                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                            />\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        disabled={formState.type === RemoteDataType.Pending}\n                    >\n                        Sign Up\n                    </Button>\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <RouterLink to=\"/sign-in\">\n                                Already have an account? Sign in\n                            </RouterLink>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            <Box mt={5}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n};\n","import { Action } from 'redux';\nimport { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { SignUp, SignUpProps } from '../components/sign-up.component';\nimport { RegisterData } from '../components/sign-up.component';\nimport { ReduxState } from '../../../state/redusers';\nimport { createAccount } from '../../../state/actions/auth.actions';\nimport { mapRemoteData } from '../../../utils/remote-data'\n\ntype StatePropsKeys = (\n    | 'formState'\n);\ntype StateProps = Pick<SignUpProps, StatePropsKeys>;\n\nconst mapStateToProps = (state: ReduxState): StateProps => ({\n    formState: mapRemoteData(state.auth.signUp, () => null),\n});\n\ntype DispatchPropsKeys = (\n    | 'onSubmit'\n);\ntype DispatchProps = Pick<SignUpProps, DispatchPropsKeys>;\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<ReduxState, {}, Action>): DispatchProps => ({\n    onSubmit(data: RegisterData) {\n        dispatch(createAccount(data));\n    },\n})\n\nexport const SignUpContainer = connect(mapStateToProps, mapDispatchToProps)(SignUp);\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        title: {\n            flexGrow: 1,\n        },\n        register: {\n            textDecoration: 'none',\n        },\n    })\n);\n\ntype NavBarProps = {\n    userName: string;\n};\n\nexport const NavBar: React.FC<NavBarProps> = ({ userName }) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        className={classes.menuButton}\n                        color=\"inherit\"\n                        aria-label=\"menu\"\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Alternative\n                    </Typography>\n                    {userName ? (\n                        <Button color=\"inherit\">{`Hello, ${userName}`}</Button>\n                    ) : (\n                        <Link to={'/sign-up'} className={classes.register}>\n                            <Button color=\"inherit\">Register</Button>\n                        </Link>\n                    )}\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n};\n","import React from 'react';\nimport { NavBar } from './nav-bar.component';\nimport { Container } from '@material-ui/core';\n\nexport type HomeProps = {\n    userName: string;\n};\n\nexport const Home: React.FC<HomeProps> = ({ userName }) => (\n    <div>\n        <NavBar userName={userName} />\n        <Container maxWidth=\"sm\">Home</Container>\n    </div>\n);\n","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n} from 'react-router-dom';\nimport { SignInContainer } from '../../sign-in/containers/sign-in.container';\nimport { SignUpContainer } from '../../sign-up/containers/sign-up.container';\nimport { Home } from '../../home/components/home.component';\nimport {\n    RemoteData,\n    LoaderWrapper,\n} from '../../../utils/remote-data';\n\nimport css from './app.module.css';\n\nexport type AppProps = {\n    userName: RemoteData<string | undefined>;\n    requestUser(): void;\n}\n\nexport class App extends React.PureComponent<AppProps> {\n    componentDidMount() {\n        this.props.requestUser();\n    }\n\n    renderSuccess = (userName: string | undefined) => (\n        <Router basename=\"/alternative-admin-ui\">\n            <Switch>\n                <Route\n                    path=\"/sign-up\"\n                    exact={true}\n                    render={() => {\n                        if (userName) {\n                            return <Redirect to={'/'} />;\n                        }\n                        return <SignUpContainer />;\n                    }}\n                />\n                <Route\n                    path=\"/sign-in\"\n                    exact={true}\n                    render={() => {\n                        if (userName) {\n                            return <Redirect to={'/'} />;\n                        }\n                        return <SignInContainer />;\n                    }}\n                />\n                <Route\n                    path=\"/\"\n                    exact={true}\n                    render={() => {\n                        if (userName) {\n                            return <Home userName={userName} />;\n                        }\n                        return <Redirect to={'/sign-in'} />;\n                    }}\n                />\n            </Switch>\n        </Router>\n    );\n\n    render() {\n        const { userName } = this.props;\n\n        return (\n            <div className={css.container}>\n                <LoaderWrapper data={userName}>\n                    {userName => this.renderSuccess(userName)}\n                </LoaderWrapper>\n            </div>\n        );\n    }\n}\n","import { Action } from 'redux';\nimport { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { App, AppProps } from '../components/app.component';\nimport { ReduxState } from '../../../state/redusers';\nimport { requestUser } from '../../../state/actions/requstUser.actions';\nimport { mapRemoteData } from '../../../utils/remote-data'\n\ntype StatePropsKeys = (\n    | 'userName'\n);\ntype StateProps = Pick<AppProps, StatePropsKeys>;\n\nconst mapStateToProps = (state: ReduxState): StateProps => ({\n    userName: mapRemoteData(state.user, user => user && user.name),\n});\n\ntype DispatchPropsKeys = (\n    | 'requestUser'\n);\ntype DispatchProps = Pick<AppProps, DispatchPropsKeys>;\n\nconst mapDispatchToProps = (dispatch: ThunkDispatch<ReduxState, {}, Action>): DispatchProps => ({\n    requestUser() {\n        dispatch(requestUser());\n    },\n})\n\nexport const AppContainer = connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger'\nimport { theme } from './theme';\nimport { reducer } from './state/redusers';\nimport { AppContainer } from './module/app/containers/app.container';\n\nimport './index.css';\n\nconst store = createStore(\n    reducer,\n    applyMiddleware(logger, thunk),\n);\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Provider store={store}>\n            <AppContainer />\n        </Provider>\n    </ThemeProvider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}