{"version":3,"sources":["module/sign-in/components/sign-in.component.tsx","module/sign-up/components/sign-up.component.tsx","module/home/components/nav-bar.component.tsx","module/home/components/home.component.tsx","api/api.ts","utils/remote-data/helpers.ts","app/app.component.tsx","theme.ts","index.tsx"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignIn","onSubmit","isSubmit","classes","React","useState","email","setEmail","password","setPassword","Container","component","maxWidth","CssBaseline","className","Avatar","noValidate","e","preventDefault","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","onChange","value","target","type","FormControlLabel","control","Checkbox","Button","disabled","Grid","container","item","xs","to","Box","mt","SignUp","firstName","setFirstName","lastName","setLastName","data","sm","justify","createStyles","root","flexGrow","menuButton","marginRight","title","register","textDecoration","NavBar","userName","AppBar","position","Toolbar","IconButton","edge","aria-label","Home","saveTokenToLS","token","localStorage","setItem","api","signUp","a","myHeaders","Headers","append","raw","JSON","stringify","requestOptions","method","headers","body","fetch","res","status","json","resData","user","signIn","getUser","getItem","isPending","pending","failure","isSuccess","result","initial","errorMessage","success","App","state","handleSignUp","setState","handleSignIn","this","css","path","exact","render","PureComponent","createMuiTheme","primary","error","red","A400","background","default","ReactDOM","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.5aac29ca.chunk.js","sourcesContent":["import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Link as RouterLink } from 'react-router-dom';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Your Website\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport type LoginData = {\n    email: string;\n    password: string;\n};\n\nexport type SignInProps = {\n    isSubmit: boolean;\n    onSubmit(data: LoginData): void;\n};\n\nexport const SignIn: React.FC<SignInProps> = ({ onSubmit, isSubmit }) => {\n    const classes = useStyles();\n    const [email, setEmail] = React.useState('');\n    const [password, setPassword] = React.useState('');\n\n    const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const { value } = e.target;\n        setEmail(value);\n    };\n\n    const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const { value } = e.target;\n        setPassword(value);\n    };\n\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        const data: LoginData = {\n            email,\n            password,\n        };\n        onSubmit(data);\n    };\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                <form\n                    className={classes.form}\n                    noValidate\n                    onSubmit={handleSubmit}\n                >\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                        onChange={handleEmailChange}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        onChange={handlePasswordChange}\n                    />\n                    <FormControlLabel\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\n                        label=\"Remember me\"\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        disabled={isSubmit}\n                    >\n                        Sign In\n                    </Button>\n                    <Grid container>\n                        <Grid item xs>\n                            <Link href=\"#\" variant=\"body2\">\n                                Forgot password?\n                            </Link>\n                        </Grid>\n                        <Grid item>\n                            <RouterLink to=\"/sign-up\">\n                                {\"Don't have an account? Sign Up\"}\n                            </RouterLink>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            <Box mt={8}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n};\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Link } from '@material-ui/core';\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Your Website\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport type SignUpProps = {\n    isSubmit: boolean;\n    onSubmit(data: RegisterData): void;\n};\n\nexport type RegisterData = {\n    name: string;\n    email: string;\n    password: string;\n};\n\nexport const SignUp: React.FC<SignUpProps> = ({ onSubmit, isSubmit }) => {\n    const [firstName, setFirstName] = React.useState('');\n    const [lastName, setLastName] = React.useState('');\n    const [email, setEmail] = React.useState('');\n    const [password, setPassword] = React.useState('');\n\n    const handleFirstNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const { value } = e.target;\n        setFirstName(value);\n    };\n\n    const handleLastNameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const { value } = e.target;\n        setLastName(value);\n    };\n\n    const handleEmailChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const { value } = e.target;\n        setEmail(value);\n    };\n\n    const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const { value } = e.target;\n        setPassword(value);\n    };\n\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        const data: RegisterData = {\n            name: `${firstName} ${lastName}`,\n            email,\n            password,\n        };\n        onSubmit(data);\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign up\n                </Typography>\n                <form\n                    className={classes.form}\n                    noValidate\n                    onSubmit={handleSubmit}\n                >\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                autoComplete=\"fname\"\n                                name=\"firstName\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"firstName\"\n                                label=\"First Name\"\n                                autoFocus\n                                onChange={handleFirstNameChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"lastName\"\n                                label=\"Last Name\"\n                                name=\"lastName\"\n                                autoComplete=\"lname\"\n                                onChange={handleLastNameChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                onChange={handleEmailChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                                onChange={handlePasswordChange}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        value=\"allowExtraEmails\"\n                                        color=\"primary\"\n                                    />\n                                }\n                                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                            />\n                        </Grid>\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        disabled={isSubmit}\n                    >\n                        Sign Up\n                    </Button>\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <RouterLink to=\"/sign-in\">\n                                Already have an account? Sign in\n                            </RouterLink>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            <Box mt={5}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n};\n","import React from 'react';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        title: {\n            flexGrow: 1,\n        },\n        register: {\n            textDecoration: 'none',\n        },\n    })\n);\n\ntype NavBarProps = {\n    userName: string;\n};\n\nexport const NavBar: React.FC<NavBarProps> = ({ userName }) => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        className={classes.menuButton}\n                        color=\"inherit\"\n                        aria-label=\"menu\"\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Alternative\n                    </Typography>\n                    {userName ? (\n                        <Button color=\"inherit\">{`Hello, ${userName}`}</Button>\n                    ) : (\n                        <Link to={'/sign-up'} className={classes.register}>\n                            <Button color=\"inherit\">Register</Button>\n                        </Link>\n                    )}\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n};\n","import React from 'react';\nimport { NavBar } from './nav-bar.component';\nimport { Container } from '@material-ui/core';\n\nexport type HomeProps = {\n    userName: string;\n};\n\nexport const Home: React.FC<HomeProps> = ({ userName }) => (\n    <div>\n        <NavBar userName={userName} />\n        <Container maxWidth=\"sm\">Home</Container>\n    </div>\n);\n","import { RegisterData } from '../module/sign-up/components/sign-up.component';\nimport { LoginData } from '../module/sign-in/components/sign-in.component';\n\nexport type User = {\n    name: string;\n};\n\nexport const TOKEN_KEY = 'token';\n\nconst saveTokenToLS = (token: string): void => {\n    localStorage.setItem(TOKEN_KEY, token);\n};\n\nclass Api {\n    signUp = async (data: RegisterData): Promise<User | null> => {\n        try {\n            const myHeaders = new Headers();\n            myHeaders.append('Content-Type', 'application/json');\n\n            const raw = JSON.stringify(data);\n\n            const requestOptions = {\n                method: 'POST',\n                headers: myHeaders,\n                body: raw,\n            };\n\n            const res = await fetch('/users', requestOptions);\n            const status = res.status;\n\n            if (status === 201) {\n                const resData = await res.json();\n                saveTokenToLS(resData.token);\n                return {\n                    name: resData.user.name,\n                };\n            }\n            return null;\n        } catch (e) {\n            return null;\n        }\n    };\n    signIn = async (data: LoginData): Promise<User | null> => {\n        try {\n            const myHeaders = new Headers();\n            myHeaders.append('Content-Type', 'application/json');\n\n            const raw = JSON.stringify(data);\n\n            const requestOptions = {\n                method: 'POST',\n                headers: myHeaders,\n                body: raw,\n            };\n\n            const res = await fetch('/users/login', requestOptions);\n            const status = res.status;\n\n            if (status === 200) {\n                const resData = await res.json();\n                saveTokenToLS(resData.token);\n                return {\n                    name: resData.user.name,\n                };\n            }\n            return null;\n        } catch (e) {\n            return null;\n        }\n    };\n    getUser = async (): Promise<User | null> => {\n        try {\n            const token = localStorage.getItem(TOKEN_KEY);\n            if (!token) {\n                return null;\n            }\n            const myHeaders = new Headers();\n            myHeaders.append('Content-Type', 'application/json');\n            myHeaders.append('Authorization', `Bearer ${token}`);\n\n            const requestOptions = {\n                method: 'GET',\n                headers: myHeaders,\n            };\n\n            const res = await fetch('/users/me', requestOptions);\n            const status = res.status;\n\n            if (status === 200) {\n                const resData = await res.json();\n                return {\n                    name: resData.name,\n                };\n            }\n            return null;\n        } catch (e) {\n            return null;\n        }\n    };\n}\n\nexport const api = new Api();\n","import { RemoteData, Pending, Initial, Failure, Success } from './remote-data';\n\nexport function isInitial<T>(data: RemoteData<T>): data is Initial {\n    const { pending, failure, result } = data;\n\n    return !pending && !failure && result === null;\n}\n\nexport function isPending<T>(data: RemoteData<T>): data is Pending {\n    const { pending, failure } = data;\n\n    return pending && !failure;\n}\n\nexport function isFailure<T>(data: RemoteData<T>): data is Failure {\n    return data.failure;\n}\n\nexport function isSuccess<T>(data: RemoteData<T>): data is Success<T> {\n    const { pending, failure, result } = data;\n\n    return !pending && !failure && result !== null;\n}\n\nexport const initial: Initial = {\n    failure: false,\n    pending: false,\n    result: null,\n};\n\nexport const initialWithDefault = <T>(defaultValue: T): Initial<T> => ({\n    failure: false,\n    pending: false,\n    result: defaultValue,\n});\n\nexport const pending: Pending = {\n    failure: false,\n    pending: true,\n    result: null,\n};\n\nexport const pendingWithDefault = <T>(defaultValue: T): Pending<T> => ({\n    failure: false,\n    pending: true,\n    result: defaultValue,\n});\n\nexport const failure = (errorMessage: string = ''): Failure => ({\n    failure: true,\n    pending: false,\n    result: null,\n    errorMessage,\n});\n\nexport function success<T>(data: T): Success<T> {\n    return {\n        failure: false,\n        pending: false,\n        result: data,\n    };\n}\n","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n} from 'react-router-dom';\nimport {\n    SignIn,\n    LoginData,\n} from '../module/sign-in/components/sign-in.component';\nimport {\n    RegisterData,\n    SignUp,\n} from '../module/sign-up/components/sign-up.component';\nimport { Home } from '../module/home/components/home.component';\nimport { api } from '../api/api';\nimport { RemoteData } from '../utils/remote-data/remote-data';\nimport {\n    failure,\n    initial,\n    isPending,\n    isSuccess,\n    pending,\n    success,\n} from '../utils/remote-data/helpers';\n\nimport css from './app.module.css';\n\ntype AppState = {\n    userName: RemoteData<string>;\n};\n\nexport class App extends React.PureComponent<{}, AppState> {\n    readonly state: AppState = {\n        userName: initial,\n    };\n\n    async componentDidMount() {\n        const user = await api.getUser();\n        if (user) {\n            this.setState({ userName: success(user.name) });\n        }\n    }\n\n    handleSignUp = async (data: RegisterData) => {\n        const user = await api.signUp(data);\n\n        this.setState({ userName: pending });\n        if (user) {\n            return this.setState({ userName: success(user.name) });\n        }\n        this.setState({ userName: failure('Что-то пошло не так:(') });\n    };\n\n    handleSignIn = async (data: LoginData) => {\n        const user = await api.signIn(data);\n\n        this.setState({ userName: pending });\n        if (user) {\n            return this.setState({ userName: success(user.name) });\n        }\n        this.setState({ userName: failure('Что-то пошло не так:(') });\n    };\n\n    render() {\n        const { userName } = this.state;\n\n        return (\n            <div className={css.container}>\n                <Router>\n                    <Switch>\n                        <Route\n                            path=\"/sign-up\"\n                            exact={true}\n                            render={() => {\n                                if (isSuccess(userName)) {\n                                    return <Redirect to={'/'} />;\n                                }\n                                return (\n                                    <SignUp\n                                        isSubmit={isPending(userName)}\n                                        onSubmit={this.handleSignUp}\n                                    />\n                                );\n                            }}\n                        />\n                        <Route\n                            path=\"/sign-in\"\n                            exact={true}\n                            render={() => {\n                                if (isSuccess(userName)) {\n                                    return <Redirect to={'/'} />;\n                                }\n                                return (\n                                    <SignIn\n                                        isSubmit={isPending(userName)}\n                                        onSubmit={this.handleSignIn}\n                                    />\n                                );\n                            }}\n                        />\n                        <Route\n                            path=\"/\"\n                            exact={true}\n                            render={() => {\n                                if (isSuccess(userName)) {\n                                    return <Home userName={userName.result} />;\n                                }\n                                return <Redirect to={'/sign-up'} />;\n                            }}\n                        />\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n}\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nexport const theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#556cd6',\n        },\n        secondary: {\n            main: '#19857b',\n        },\n        error: {\n            main: red.A400,\n        },\n        background: {\n            default: '#fff',\n        },\n    },\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { App } from './app/app.component';\nimport { theme } from './theme';\n\nimport './index.css';\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n    </ThemeProvider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}